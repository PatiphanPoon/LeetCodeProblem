# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if k == 0 or not head:
            return head
        count = head
        n = 0
        while count:
            count = count.next
            n += 1   
        k %= n
        if k == 0:
            return head
        prev = head
        while n - k - 1:
            prev = prev.next
            n -= 1
        new_head = prev.next
        prev.next = None
        prev = new_head
        while prev.next:
            prev = prev.next
        prev.next = head
        return new_head
        
        
            
        
